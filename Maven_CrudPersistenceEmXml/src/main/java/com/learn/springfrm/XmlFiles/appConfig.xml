<?xml version="1.0" encoding="UTF-8"?>
<!-- jpa-config.xml -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/data/jpa
                           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">
                            <!-- Enable component scanning for services and DAOs -->
    <context:component-scan base-package="com.learn.springfrm.Service, com.learn.Springfrm.Dao"/>

    <!-- Enable transaction management with annotation-driven configuration -->
    <tx:annotation-driven/>

    <!-- applicationContext.xml -->

<!-- Enable component scanning to automatically detect and register Spring components (e.g., @Service, @Repository) -->
<context:component-scan base-package="com.learn.springfrm"/>

<!-- Define a data source bean, replace with your actual data source configuration -->
<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
    <property name="url" value="jdbc:mysql://localhost:3306/mavencrud"/>
    <property name="username" value="root"/>
    <property name="password" value="yourPassword"/>
</bean>

<!-- Configure the EntityManagerFactory for JPA -->
<bean id="entityManagerFactory"
      class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="packagesToScan" value="com.learn.springfrm.Entities"/>
    <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        	    <property name="showSql" value="true"/>
            	<property name="generateDdl" value="true"/>
           		<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
        </bean>
    </property>
    <!-- Set Hibernate properties here -->
    <property name="jpaProperties">
        <props>
            <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
            <prop key="hibernate.hbm2ddl.auto">update</prop>
            <!-- Add other Hibernate properties as needed
            hibernate.show_sql: Set to true to enable logging of SQL statements.
hibernate.format_sql: Set to true to pretty-print SQL in the logs.
hibernate.use_sql_comments: Set to true to include comments in the generated SQL. -->
			<prop key="hibernate.format_sql">true</prop>
			<prop key="hibernate.show_sql">true</prop>
			<prop key="hibernate.use_sql_comments">true</prop>
        </props>
    </property>
</bean>

<!-- Configure the Transaction Manager for JPA -->
<bean id="transactionManager"
      class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory"/>
</bean>

<!-- Enable transactional behavior using annotations -->
<tx:annotation-driven/>

<!-- Other beans and configurations -->

    
</beans>
